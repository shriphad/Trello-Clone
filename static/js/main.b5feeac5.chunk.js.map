{"version":3,"sources":["Service/isMobile.jsx","Components/form.js","Components/AddCard.js","Components/Cards.js","Components/Title.js","Components/Navbar.js","App.js","index.js","Service/storageService.js"],"names":["IsMobile","useState","window","innerWidth","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","validateMessages","required","Demo","props","list","addTitle","isCard","isMobile","Form","useForm","form","formCardDescription","Item","name","label","rules","TextArea","allowClear","inputStyle","whiteSpace","onFinish","values","resetFields","add","val","user","Name","obj","Title","cards","some","it","titleExists","message","error","updatedList","style","display","flexDirection","span","type","htmlType","AddCard","visible","setVisible","addCard","content","ID","uuidv4","title","trigger","onVisibleChange","Cards","card","deleteCard","item","size","marginBottom","hoverable","extra","CloseOutlined","onClick","fontSize","color","padding","Description","data","deleteTitle","styleCards","overflowY","maxHeight","grid","column","dataSource","renderItem","droppableId","provided","ref","innerRef","margin","map","index","draggableId","draggableProps","dragHandleProps","placeholder","marginLeft","Navbar","textAlign","key","App","initialList","getLocalStorage","setList","backend","TouchBackend","HTML5Backend","getTitleIndex","Titles","findIndex","cardExists","value","listIndex","cardDestinationIndex","slice","push","setLocalStorage","success","splice","updatedCards","filter","className","onDragEnd","result","source","destination","TitleSourceIndex","TitleDestinationIndex","temp","swapCards","ReactDOM","render","document","getElementById","module","exports","localStorage","setItem","JSON","stringify","state","parse","getItem"],"mappings":"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","file":"static/js/main.b5feeac5.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nconst IsMobile = () => {\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const handleWindowSizeChange = () => {\r\n            setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n\r\n    return (width <= 768);\r\n}\r\n\r\nexport default IsMobile","import { Form, Input, Col, Button, message, Row } from \"antd\";\r\nimport IsMobile from \"../Service/isMobile\";\r\n\r\nfunction titleExists(list, val) {\r\n  return list.some(function (it) {\r\n    return it.Title === val;\r\n  });\r\n}\r\n\r\nconst validateMessages = {\r\n  // eslint-disable-next-line no-template-curly-in-string\r\n  required: \"${label} is required!\",\r\n};\r\n\r\nexport default function Demo(props) {\r\n  const { list, addTitle, isCard } = props;\r\n  const isMobile = IsMobile();\r\n  const [form] = Form.useForm();\r\n  const styleTitleForm = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  };\r\n  const formCardDescription = (\r\n    <Form.Item\r\n      name={[\"user\", \"Description\"]}\r\n      label=\"Description\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input.TextArea allowClear={true} />\r\n    </Form.Item>\r\n  );\r\n  const inputStyle = isMobile ? { width: \"100%\", whiteSpace: \"nowrap\" } : { width: \"100%\" };\r\n\r\n  //Preprocess the form data and adds the Title if it's unique\r\n  const AddTitle = (values) => {\r\n    const val = values.user.Name;\r\n    const obj = {\r\n      Title: val,\r\n      cards: [],\r\n    };\r\n    //If Title already exists, then exit immediately\r\n    if (titleExists(list, val)) {\r\n      message.error(`${val} Title already exists`, 1);\r\n      return;\r\n    } else {\r\n      //If its a Unique Title then add.\r\n      const updatedList = [...list, obj];\r\n      addTitle(updatedList);\r\n    }\r\n    form.resetFields();\r\n  };\r\n\r\n  //Preprocess the form data and adds the Cards if it's unique\r\n  const AddCard = (values) => {\r\n    form.resetFields();\r\n    props.add(values);\r\n  };\r\n\r\n  return (\r\n\r\n    <Form\r\n      form={form}\r\n      name=\"nest-messages\"\r\n      onFinish={isCard ? AddCard : AddTitle}\r\n      validateMessages={validateMessages}\r\n    >\r\n      <div style={isCard ? null : styleTitleForm}>\r\n        <Row>\r\n          <Col span={12} >\r\n            <Form.Item\r\n              name={[\"user\", \"Name\"]}\r\n              label=\"Title\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input style={inputStyle} allowClear={true} />\r\n            </Form.Item>\r\n          </Col>\r\n          {isCard ? formCardDescription : null}\r\n          <Col span={12}>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                {isCard ? \"Add Card\" : \"Add Title\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n","import { Popover, Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport Form from \"./form\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function AddCard(props) {\r\n  const [visible, setVisible] = useState(false);\r\n  const { list, addCard } = props;\r\n\r\n  const add = (values) => {\r\n    const ID = uuidv4();\r\n    values.user[\"ID\"] = ID;\r\n    const val = values.user;\r\n    addCard(list, val);\r\n    setVisible(false);\r\n  };\r\n  return (\r\n    <Popover\r\n      content={<Form isCard={true} add={add} />}\r\n      title=\"Add Card\"\r\n      trigger=\"click\"\r\n      visible={visible}\r\n      onVisibleChange={() => setVisible(!visible)}\r\n    >\r\n      <Button type=\"primary\">{visible ? \"Close\" : \"Add Card\"}</Button>\r\n    </Popover>\r\n  );\r\n}\r\n","import { Card } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function Cards(props) {\r\n  const { card, deleteCard, item } = props;\r\n  const styleCloseMark = {\r\n    fontSize: \"13px\",\r\n    color: \"red\",\r\n    padding: \"5px\",\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      size=\"small\"\r\n      title={card.Name}\r\n      style={{ marginBottom: \"10px\" }}\r\n      hoverable={true}\r\n      extra={\r\n        <CloseOutlined\r\n          onClick={() => deleteCard(item, card.ID)}\r\n          style={styleCloseMark}\r\n        />\r\n      }\r\n    >\r\n      {card.Description}\r\n    </Card>\r\n  );\r\n}\r\n","import { List, Card } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport AddCardForm from \"./AddCard\";\r\nimport TrelloCards from \"./Cards\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport IsMobile from \"../Service/isMobile\";\r\n\r\nexport default function Title(props) {\r\n  const { data, deleteTitle, deleteCard, addCard } = props;\r\n  const isMobile = IsMobile();\r\n  const styleCards = {\r\n    overflowY: \"scroll\",\r\n    maxHeight: \"400px\",\r\n    marginBottom: \"20px\",\r\n  };\r\n\r\n  const grid = isMobile ? { column: 1 } : { column: 4 }\r\n\r\n  return (\r\n    <List\r\n      grid={grid}\r\n      dataSource={data}\r\n      renderItem={(item) => (\r\n        <Droppable droppableId={item.Title}>\r\n          {(provided) => (\r\n            <div ref={provided.innerRef}>\r\n              <List.Item>\r\n                <Card\r\n                  title={item.Title}\r\n                  style={{ margin: \"15px\" }}\r\n                  extra={\r\n                    <CloseOutlined\r\n                      style={{ color: \"red\", padding: \"5px\" }}\r\n                      onClick={() => deleteTitle(item)}\r\n                    />\r\n                  }\r\n                  hoverable={true}\r\n                >\r\n                  <div style={styleCards}>\r\n                    {item.cards.map((card, index) => (\r\n                      <Draggable\r\n                        key={card.ID}\r\n                        draggableId={card.ID}\r\n                        index={index}\r\n                      >\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                          >\r\n                            <TrelloCards\r\n                              card={card}\r\n                              item={item}\r\n                              key={index}\r\n                              deleteCard={deleteCard}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                  <AddCardForm\r\n                    list={item}\r\n                    style={{ marginLeft: \"50%\" }}\r\n                    cards={item.cards}\r\n                    addCard={addCard}\r\n                  />\r\n                </Card>\r\n              </List.Item>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","export default function Navbar() {\r\n  return <h1 style={{ textAlign: \"center\" }}>Trello</h1>;\r\n}\r\n","import \"antd/dist/antd.css\";\r\nimport { useState } from \"react\";\r\nimport Form from \"./Components/form\";\r\nimport Title from \"./Components/Title\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport { message } from \"antd\";\r\nimport \"./App.css\";\r\nimport { setLocalStorage, getLocalStorage } from \"./Service/storageService\";\r\nimport IsMobile from \"./Service/isMobile\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\n\r\nconst key = \"TRELLO_REACT_APP_ID\";\r\n\r\nexport default function App() {\r\n  const initialList = getLocalStorage(key);\r\n  const [list, setList] = useState(initialList);\r\n  const isMobile = IsMobile();\r\n\r\n  const backend = isMobile ? TouchBackend : HTML5Backend;\r\n\r\n  function getTitleIndex(Titles, item) {\r\n    const val = item.Title ? item.Title : item;\r\n    return Titles.findIndex((it) => it.Title === val);\r\n  }\r\n\r\n  function getCard(cards, ID) {\r\n    return cards.filter((it) => it.ID === ID);\r\n  }\r\n\r\n  function swapCards(cards, TitleSourceIndex, TitleDestinationIndex) {\r\n    const temp = cards[TitleSourceIndex];\r\n    cards[TitleSourceIndex] = cards[TitleDestinationIndex];\r\n    cards[TitleDestinationIndex] = temp;\r\n    return cards;\r\n  }\r\n\r\n  //Finds if the given card exists in the given index of the list\r\n  function cardExists(list, value, index) {\r\n    return list[index].cards.some(function (item) {\r\n      return item.ID === value.ID;\r\n    });\r\n  }\r\n\r\n  const addTitle = (updatedList) => {\r\n    setList(updatedList);\r\n    message.success(`Title has been added successfully`, 1);\r\n    setLocalStorage(key, updatedList);\r\n  };\r\n\r\n  //To Delete a List\r\n  const deleteTitle = (value) => {\r\n    const updatedList = list.filter(function (item) {\r\n      return item.Title !== value.Title;\r\n    });\r\n    setList(updatedList);\r\n    setLocalStorage(key, updatedList);\r\n  };\r\n\r\n  //Add a Card to the specified list\r\n  const addCard = (\r\n    item,\r\n    card,\r\n    listIndex = null,\r\n    cardDestinationIndex = null\r\n  ) => {\r\n    let index;\r\n    if (listIndex === null) index = getTitleIndex(list, item);\r\n    else index = listIndex;\r\n\r\n    if (cardExists(list, card, index)) {\r\n      message.error(`${card.Name} card already exists`, 1);\r\n      return false;\r\n    } else if (listIndex === null) {\r\n      // inserting at end of the cards\r\n      let data = list.slice();\r\n      data[index].cards.push({\r\n        Name: card.Name,\r\n        Description: card.Description,\r\n        ID: card.ID,\r\n      });\r\n      setList(data);\r\n      setLocalStorage(key, data);\r\n      message.success(`${card.Name} card has successfully been added`, 1);\r\n      return true;\r\n    } else {\r\n      // inserting at specified index of the list\r\n      let data = list.slice();\r\n      data[index].cards.splice(cardDestinationIndex, 0, card);\r\n      setList(data);\r\n      setLocalStorage(key, data);\r\n      message.success(`${card.Name} card has successfully been added`, 1);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //Delete a Card from the specified list\r\n  const deleteCard = (item, value, listIndex = null) => {\r\n    let index;\r\n    if (listIndex === null) index = getTitleIndex(list, item);\r\n    else index = listIndex;\r\n\r\n    const updatedCards = list[index].cards.filter(function (item) {\r\n      return item.ID !== value;\r\n    });\r\n\r\n    let data = [...list];\r\n    data[index].cards = updatedCards;\r\n\r\n    setList(data);\r\n    setLocalStorage(key, data);\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (destination.droppableId === source.droppableId) {\r\n      let updatedList = [...list];\r\n      const index = getTitleIndex(list, destination.droppableId);\r\n\r\n      updatedList[index].cards = swapCards(\r\n        updatedList[index].cards,\r\n        source.index,\r\n        destination.index\r\n      );\r\n      setList(updatedList);\r\n      setLocalStorage(key, updatedList);\r\n    } else {\r\n      const TitleDestinationIndex = getTitleIndex(\r\n        list,\r\n        destination.droppableId\r\n      );\r\n      const TitleSourceIndex = getTitleIndex(list, source.droppableId);\r\n      const card = getCard(list[TitleSourceIndex].cards, result.draggableId);\r\n\r\n      const isAdded = addCard(\r\n        list[TitleDestinationIndex].cards,\r\n        card[0],\r\n        TitleDestinationIndex,\r\n        destination.index\r\n      );\r\n      if (isAdded)\r\n        deleteCard(\r\n          list[TitleSourceIndex].cards,\r\n          result.draggableId,\r\n          TitleSourceIndex\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Form list={list} addTitle={addTitle} isCard={false} />\r\n      <DragDropContext backend={backend} onDragEnd={onDragEnd}>\r\n        <Title\r\n          data={list}\r\n          deleteTitle={deleteTitle}\r\n          deleteCard={deleteCard}\r\n          addCard={addCard}\r\n        />\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","function setState(key, value) {\r\n  //Add key also\r\n  window.localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n\r\nfunction getState(key) {\r\n  let state = JSON.parse(window.localStorage.getItem(key));\r\n  //console.log(state.data);\r\n  return state === null ? [] : state;\r\n}\r\n\r\nmodule.exports = {\r\n  setLocalStorage: setState,\r\n  getLocalStorage: getState,\r\n};\r\n"],"sourceRoot":""}